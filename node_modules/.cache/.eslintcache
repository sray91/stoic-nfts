[{"/Users/swanagan/projects/stoic-traits/src/index.jsx":"1","/Users/swanagan/projects/stoic-traits/src/App.jsx":"2"},{"size":221,"mtime":1648265779942,"results":"3","hashOfConfig":"4"},{"size":6414,"mtime":1648267554615,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eq156z",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"12"},"/Users/swanagan/projects/stoic-traits/src/index.jsx",[],[],"/Users/swanagan/projects/stoic-traits/src/App.jsx",["13","14"],[],"import React, { useEffect, useState } from 'react';\nimport './styles/App.css';\nimport { ethers } from 'ethers';\nimport { Loading } from 'react-loading-dot';\nimport myEpicNft from './utils/MyEpicNFT.json';\nimport twitterLogo from './assets/twitter-logo.svg';\n\nconst OPENSEA_LINK ='https://testnets.opensea.io/collection/stoicnft-eimjddcifq';\nconst TOTAL_MINT_COUNT = 55;\nconst TWITTER_LINK = 'https://twitter.com/Swanagan';\nconst TWITTER_HANDLE = 'eewatchguy.eth';\n\n// I moved the contract address to the top for easy access.\nconst CONTRACT_ADDRESS = '0x9905Bf40e406E44f436f60A8b08BfeF667Ac6C1a';\n\nconst App = () => {\n\tconst [currentAccount, setCurrentAccount] = useState('');\n\tconst [mintedSoFar, setMintedSoFar] = useState('0');\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst checkIfWalletIsConnected = async () => {\n\t\tconst { ethereum } = window;\n\n\t\tif (!ethereum) {\n\t\t\tconsole.log('Make sure you have metamask!');\n\t\t\treturn;\n\t\t} else {\n\t\t\tconsole.log('We have the ethereum object', ethereum);\n\t\t}\n\n\t\tconst accounts = await ethereum.request({ method: 'eth_accounts' });\n\n\t\tif (accounts.length !== 0) {\n\t\t\tconst account = accounts[0];\n\t\t\tconsole.log('Found an authorized account:', account);\n\t\t\tsetCurrentAccount(account);\n\n\t\t\t// Setup listener! This is for the case where a user comes to our site\n\t\t\t// and ALREADY had their wallet connected + authorized.\n\t\t\tsetupEventListener();\n\t\t} else {\n\t\t\tconsole.log('No authorized account found');\n\t\t}\n\t\tlet chainId = await ethereum.request({ method: 'eth_chainId' });\n\t\tconsole.log('Connected to chain ' + chainId);\n\n\t\t// String, hex code of the chainId of the Rinkebey test network\n\t\tconst rinkebyChainId = '0x4';\n\t\tif (chainId !== rinkebyChainId) {\n\t\t\talert('You are not connected to the Rinkeby Test Network!');\n\t\t}\n\t};\n\n\tconst connectWallet = async () => {\n\t\ttry {\n\t\t\tconst { ethereum } = window;\n\n\t\t\tif (!ethereum) {\n\t\t\t\talert('Get MetaMask!');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst accounts = await ethereum.request({\n\t\t\t\tmethod: 'eth_requestAccounts'\n\t\t\t});\n\n\t\t\tconsole.log('Connected', accounts[0]);\n\t\t\tsetCurrentAccount(accounts[0]);\n\n\t\t\t// Setup listener! This is for the case where a user comes to our site\n\t\t\t// and connected their wallet for the first time.\n\t\t\tsetupEventListener();\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\t// Setup our listener.\n\tconst setupEventListener = async () => {\n\t\t// Most of this looks the same as our function askContractToMintNft\n\t\ttry {\n\t\t\tconst { ethereum } = window;\n\n\t\t\tif (ethereum) {\n\t\t\t\t// Same stuff again\n\t\t\t\tconst provider = new ethers.providers.Web3Provider(ethereum);\n\t\t\t\tconst signer = provider.getSigner();\n\t\t\t\tconst connectedContract = new ethers.Contract(\n\t\t\t\t\tCONTRACT_ADDRESS,\n\t\t\t\t\tmyEpicNft.abi,\n\t\t\t\t\tsigner\n\t\t\t\t);\n\n\t\t\t\t// THIS IS THE MAGIC SAUCE.\n\t\t\t\t// This will essentially \"capture\" our event when our contract throws it.\n\t\t\t\t// If you're familiar with webhooks, it's very similar to that!\n\t\t\t\tconnectedContract.on('NewEpicNFTMinted', (from, tokenId) => {\n\t\t\t\t\tconsole.log(from, tokenId.toNumber());\n\t\t\t\t\talert(\n\t\t\t\t\t\t`Hey there! We've minted your NFT and sent it to your wallet. It may be blank right now. It can take a max of 10 min to show up on OpenSea. Here's the link: https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${tokenId.toNumber()}`\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\t\tconsole.log('Setup event listener!');\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Ethereum object doesn't exist!\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tconst askContractToMintNft = async () => {\n\t\ttry {\n\t\t\tconst { ethereum } = window;\n\n\t\t\tif (ethereum) {\n\t\t\t\tconst provider = new ethers.providers.Web3Provider(ethereum);\n\t\t\t\tconst signer = provider.getSigner();\n\t\t\t\tconst connectedContract = new ethers.Contract(\n\t\t\t\t\tCONTRACT_ADDRESS,\n\t\t\t\t\tmyEpicNft.abi,\n\t\t\t\t\tsigner\n\t\t\t\t);\n\n        setIsLoading(true);\n\t\t\t\tconsole.log('Going to pop wallet now to pay gas...');\n\t\t\t\tlet nftTxn = await connectedContract.makeAnEpicNFT();\n\n\t\t\t\tconsole.log('Mining...please wait.');\n\t\t\t\tawait nftTxn.wait();\n\t\t\t\tconsole.log(nftTxn);\n\t\t\t\tconsole.log(\n\t\t\t\t\t`Mined, see transaction: https://rinkeby.etherscan.io/tx/${\n\t\t\t\t\t\tnftTxn.hash\n\t\t\t\t\t}`\n\t\t\t\t);\n        setIsLoading(false);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Ethereum object doesn't exist!\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tconst getTotalNFTsMintedSoFar = async () => {\n\t\ttry {\n\t\t\tconst { ethereum } = window;\n\n\t\t\tif (ethereum) {\n\t\t\t\tconst provider = new ethers.providers.Web3Provider(ethereum);\n\t\t\t\tconst signer = provider.getSigner();\n\t\t\t\tconst connectedContract = new ethers.Contract(\n\t\t\t\t\tCONTRACT_ADDRESS,\n\t\t\t\t\tmyEpicNft.abi,\n\t\t\t\t\tsigner\n\t\t\t\t);\n\t\t\t\tlet nft = await connectedContract.getTotalNFTsMintedSoFar();\n\t\t\t\tsetMintedSoFar(nft.toNumber());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log(\"Ethereum object doesn't exist!\");\n\t\t\t}\n\t\t} catch(error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\t\n\tuseEffect(() => {\n\t\tcheckIfWalletIsConnected();\n\t});\n\n\tconst renderNotConnectedContainer = () => (\n\t\t<button\n\t\t\tonClick={connectWallet}\n\t\t\tclassName=\"cta-button connect-wallet-button\"\n\t\t>\n\t\t\tConnect to Wallet\n\t\t</button>\n\t);\n\n\tconst fireSomeFunctions = () => (\n\t\taskContractToMintNft(), getTotalNFTsMintedSoFar()\n\t);\n\n\tconst renderMintUI = () => (\n\t\t<button\n\t\t\tonClick={fireSomeFunctions}\n\t\t\tclassName=\"cta-button connect-wallet-button\"\n\t\t>\n\t\t\tMint NFT\n\t\t</button>\n\t);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"header-container\">\n\t\t\t\t\t<p className=\"header gradient-text\">Stoic Traits NFT</p>\n\t\t\t\t\t<p className=\"sub-text\">\n\t\t\t\t\t\tEach unique. Each stoic. Discover your NFT today.\n\t\t\t\t\t</p>\n\t\t\t\t\t{currentAccount === ''\n\t\t\t\t\t\t? renderNotConnectedContainer()\n\t\t\t\t\t\t: renderMintUI()}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"body-container\">\n\t\t\t\t\t<p className=\"body-text\">{`${mintedSoFar}/${TOTAL_MINT_COUNT} NFTs minted so far!`}</p>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<button className=\"cta-button connect-wallet-button\">\n\t\t\t\t\t\t<a className=\"body-text\" href={OPENSEA_LINK} target=\"_blank\">\n\t\t\t\t\t\t\tðŸŒŠ View Collection on OpenSea\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n        <div>\n          <div>{isLoading ? <Loading /> : ``}</div>\n        </div>\n\t\t\t\t<div className=\"footer-container\">\n\t\t\t\t\t<img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"footer-text\"\n\t\t\t\t\t\thref={TWITTER_LINK}\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>{`@${TWITTER_HANDLE}`}</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n",{"ruleId":"15","severity":1,"message":"16","line":184,"column":25,"nodeType":"17","messageId":"18","endLine":184,"endColumn":26},{"ruleId":"19","severity":1,"message":"20","line":213,"column":7,"nodeType":"21","messageId":"22","endLine":213,"endColumn":68,"fix":"23"},"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"24","text":"25"},[5941,5941]," rel=\"noreferrer\""]